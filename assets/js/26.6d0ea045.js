(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{514:function(t,e,a){"use strict";a.r(e);var n=a(4),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("很久之前買了一塊 "),a("a",{attrs:{href:"https://docs.labs.mediatek.com/resource/linkit-smart-7688/en/get-started/get-started-with-the-linkit-smart-7688-duo-development-board",target:"_blank",rel:"noopener noreferrer"}},[t._v("linkit smart 7688 duo"),a("OutboundLink")],1),t._v("\n開發版，但是都被我擱置在一邊，最近才想到可以拿來玩一些 IoT 的東西。\n7688 讓開發者可以在上面寫 Node.js, Python 以及 C，可以寫 Python 還不夠潮，竟然還可以寫 JavaScript ，不過在這篇我打算來試試看寫 Go！")]),t._v(" "),a("p",[t._v("首先，因為 7688 Ｄuo 其實就是跑 "),a("a",{attrs:{href:"https://openwrt.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("openwrt"),a("OutboundLink")],1),t._v("，而剛好現在 Go 也已經支援 mips，原本是嘗試使用 "),a("a",{attrs:{href:"https://blog.wu-boy.com/2016/04/write-golang-in-linkit-smart-7688/",target:"_blank",rel:"noopener noreferrer"}},[t._v("這篇"),a("OutboundLink")],1),t._v("\n的方式來建構開發環境，但是進去 docker container 裡面 build openwrt 一直失敗，所以就想來直接試試看 Go 的 cross compile。")]),t._v(" "),a("h2",{attrs:{id:"環境"}},[t._v("環境")]),t._v(" "),a("ul",[a("li",[t._v("MacOS: 10.15.6（19G73）")]),t._v(" "),a("li",[t._v("Go: 1.14.2 darwin/amd64")])]),t._v(" "),a("h2",{attrs:{id:"hello-world"}},[t._v("Hello World")]),t._v(" "),a("p",[t._v("首先，先寫一個簡單的 "),a("code",[t._v("helloworld.go")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"cross-compile"}},[t._v("Cross Compile")]),t._v(" "),a("p",[t._v("分別需要設定：")]),t._v(" "),a("ul",[a("li",[t._v("GOOS: 這邊給 "),a("code",[t._v("linux")])]),t._v(" "),a("li",[t._v("GOARCH： 這邊原本以為要給 mips 後來查了一下因為 7688 duo 是 little endian ，所以要用 mipsle (64 位元的情況用 mips64le)")]),t._v(" "),a("li",[t._v("GOMIPS: 這邊可以給 "),a("code",[t._v("hardfloat")]),t._v(" (default) 或者 "),a("code",[t._v("softfloat")]),t._v("，我自己試了一下似乎兩個都可以讓程式正確執行，也查不太到兩個的差異")]),t._v(" "),a("li",[t._v("CGO_ENABLED: 預設是 1，我查到的是要把它關掉，但是我實際測試也是沒有影響，檔案大小也一樣（或許是因為 helloworld 很單純？）")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("linux "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mipsle "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOMIPS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("softfloat "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CGO_ENABLED")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" go build -o helloworld\n")])])]),a("blockquote",[a("p",[t._v("在 linux 確認 big/little endian 可以用\n"),a("code",[t._v("echo -n I | hexdump -o | awk '{ print substr($2,6,1); exit}'")])])]),t._v(" "),a("h2",{attrs:{id:"在-linkit-7688-duo-上面執行"}},[t._v("在 Linkit 7688 Duo 上面執行")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SCP 上傳到 Linkit 7688 Duo")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 執行")]),t._v("\nroot@mylinkit:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./helloworld")]),t._v("\nHello World"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nroot@mylinkit:~"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),a("p",[t._v("很順利的成功啦！這麼一來可以挑戰寫更複雜的東西，像是操作 GPIO 等等，不過這等到下一次吧 XD")]),t._v(" "),a("h2",{attrs:{id:"參考連結"}},[t._v("參考連結")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://blog.wu-boy.com/2016/04/write-golang-in-linkit-smart-7688/",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 linkit smart 7688 寫 golang"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://serverfault.com/questions/163487/how-to-tell-if-a-linux-system-is-big-endian-or-little-endian",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to tell if a Linux system is big endian or little endian?"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://golang.org/doc/go1.10#ports",target:"_blank",rel:"noopener noreferrer"}},[t._v("GOMIPS=hardfloat/softfloat"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.echochio.nctu.me/2018/06/golang_multiple_platforms/",target:"_blank",rel:"noopener noreferrer"}},[t._v("golang 編譯各平台"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);